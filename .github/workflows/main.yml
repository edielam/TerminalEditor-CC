name: Publish Release
on:
  push:
    tags:
      - 'v*'
    branches: '*'
  workflow_dispatch:

env:
  APP_NAME: "CortexCode"

jobs:
  changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build changelog
        id: build_changelog
        run: |
          PREV_TAG=$(git tag --list v* | tail -n2 | head -n1)
          echo "changelog=$(git log $PREV_TAG...${{ github.ref_name }} --pretty=format:"- %s")" >> $GITHUB_OUTPUT
    outputs:
      changelog: ${{ steps.build_changelog.outputs.changelog }}

  build-arm64:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Setup ARM64 build environment
      run: |
        sudo apt update
        sudo apt install -y libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev
        rustup target add aarch64-unknown-linux-gnu
        sudo apt install gcc-aarch64-linux-gnu
    - name: Build for ARM64
      run: |
        npm install
        npm run tauri build -- --target aarch64-unknown-linux-gnu
    - name: Upload ARM64 Debian package
      uses: actions/upload-artifact@v4
      with:
        name: ARM64 Debian Package
        path: src-tauri/target/aarch64-unknown-linux-gnu/release/bundle/deb/*.deb

  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    needs: [changelog, build-arm64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: npm

      - name: Setup Rust
        run: |
          rustup update --no-self-update

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install Ubuntu dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y libwebkit2gtk-4.0-dev \
              build-essential \
              curl \
              wget \
              file \
              libssl-dev \
              libgtk-3-dev \
              libayatana-appindicator3-dev \
              librsvg2-dev

      - name: Install frontend
        run: npm install

      - name: CI Build
        if: ${{ github.ref_type == 'branch' }}
        run: npm run tauri build

      - name: CI Upload Windows
        if: ${{ github.ref_type == 'branch' && matrix.platform == 'windows-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: 'Windows Installers'
          path: |
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/nsis/*.exe

      - name: CI Upload macOS
        if: ${{ github.ref_type == 'branch' && matrix.platform == 'macos-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: 'macOS Installer'
          path: src-tauri/target/release/bundle/dmg/*.dmg

      - name: CI Upload Linux (x86_64)
        if: ${{ github.ref_type == 'branch' && matrix.platform == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: 'Linux Distributions (x86_64)'
          path: |
            src-tauri/target/release/bundle/deb/*.deb
            src-tauri/target/release/bundle/AppImage/*.AppImage

      - name: Download ARM64 Debian package
        uses: actions/download-artifact@v4
        with:
          name: ARM64 Debian Package
          path: arm64-deb

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        if: ${{ github.ref_type == 'tag' }}
        env:
          CI: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "${{ env.APP_NAME }} v__VERSION__"
          releaseBody: |
            ${{needs.changelog.outputs.changelog}}
            See the assets to download this version and install.
          releaseDraft: true
          prerelease: false
